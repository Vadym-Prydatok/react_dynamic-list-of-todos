{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedID","nowSelected","className","map","todo","id","completed","title","type","onClick","TodoFilter","search","filter","query","onChange","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","closeModal","useState","user","setUser","useEffect","userId","users","catch","href","email","name","App","setTodos","setQuery","setFilter","selectTodoID","setTodoID","filteredTodos","useMemo","visibleTodos","toLocaleLowerCase","includes","trim","selectedTodo","find","option","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7967bb25.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedID: (todoID: number) => void,\n  nowSelected: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedID,\n  nowSelected,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={todo.id === nowSelected\n            ? 'has-background-info-light'\n            : ''}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectedID(todo.id)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={todo.id === nowSelected\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ntype Props = {\n  search: (value: string) => void,\n  filter: (value: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: FC<Props> = ({ search, filter, query }) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={({ target }) => filter(target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={({ target }) => search(target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            aria-label=\"clearSearchBtn\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => search('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  closeModal: (n: number) => void,\n  todo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  closeModal, todo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo?.userId || 1)\n      .then(users => setUser(users))\n      .catch(() => setUser(null));\n  }, [todo?.userId]);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {user?.id !== todo?.userId ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              aria-label=\"delte-button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('');\n  const [selectTodoID, setTodoID] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => (setTodos(todo)));\n  }, []);\n\n  const handleSearch = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleFilter = (option: string) => {\n    setFilter(option);\n  };\n\n  const filteredTodos = useMemo(() => {\n    const visibleTodos = todos\n      .filter(todo => todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase().trim()));\n\n    switch (filter) {\n      case 'completed':\n        return visibleTodos.filter(todo => todo.completed === true);\n\n      case 'active':\n        return visibleTodos.filter(todo => todo.completed === false);\n\n      default:\n        return visibleTodos;\n    }\n\n    return visibleTodos;\n  }, [todos, query, filter]);\n\n  const selectedTodo = useMemo(() => {\n    const selectTodo = todos.find(todo => todo.id === selectTodoID) || null;\n\n    return selectTodo;\n  }, [selectTodoID, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                search={handleSearch}\n                filter={handleFilter}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                selectedID={setTodoID}\n                nowSelected={selectTodoID}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodoID && (\n        <TodoModal\n          closeModal={setTodoID}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}