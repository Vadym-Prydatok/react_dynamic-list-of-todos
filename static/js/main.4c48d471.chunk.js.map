{"version":3,"sources":["types/EnumFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedID","nowSelected","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onSearch","onFilter","query","onChange","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","closeModal","useState","user","setUser","useEffect","userId","users","catch","href","email","name","App","setTodos","setQuery","filter","setFilter","selectTodoID","setTodoID","handleSearch","useCallback","visibleTodos","toLocaleLowerCase","includes","trim","filteredTodos","useMemo","selectedTodo","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c48d471.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedID: (todoID: number) => void,\n  nowSelected: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedID,\n  nowSelected,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': todo.id === nowSelected },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectedID(todo.id)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={todo.id === nowSelected\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\nimport { Filter } from '../../types/EnumFilter';\n\ntype Props = {\n  onSearch: (value: string) => void,\n  onFilter: (value: Filter) => void,\n  query: string,\n};\n\nexport const TodoFilter: FC<Props> = ({ onSearch, onFilter, query }) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={({ target }) => onFilter(target.value as Filter)}\n        >\n          <option value={Filter.ALL}>All</option>\n          <option value={Filter.ACTIVE}>Active</option>\n          <option value={Filter.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={({ target }) => onSearch(target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            aria-label=\"clearSearchBtn\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSearch('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  closeModal: (n: number) => void,\n  todo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  closeModal, todo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo?.userId || 1)\n      .then(users => setUser(users))\n      .catch(() => setUser(null));\n  }, [todo?.userId]);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {user?.id !== todo?.userId ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              aria-label=\"delte-button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { Filter } from './types/EnumFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(Filter.ALL);\n  const [selectTodoID, setTodoID] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const handleSearch = useCallback((value: string) => {\n    setQuery(value);\n  }, [query]);\n\n  const visibleTodos = todos\n    .filter(todo => todo.title.toLocaleLowerCase()\n      .includes(query.toLocaleLowerCase().trim()));\n\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case Filter.COMPLETED:\n        return visibleTodos.filter(todo => todo.completed === true);\n\n      case Filter.ACTIVE:\n        return visibleTodos.filter(todo => todo.completed === false);\n\n      default:\n        return visibleTodos;\n    }\n  }, [todos, query, filter]);\n\n  const selectedTodo = useMemo(() => {\n    const selectTodo = todos.find(todo => todo.id === selectTodoID) || null;\n\n    return selectTodo;\n  }, [selectTodoID, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSearch={handleSearch}\n                onFilter={setFilter}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                selectedID={setTodoID}\n                nowSelected={selectTodoID}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodoID && (\n        <TodoModal\n          closeModal={setTodoID}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}